#### JSP语法：
##### 脚本程序：
脚本程序可以包含任意量的Java语句、变量、方法、或者表达式。
声明本块是脚本程序的方法:
```jsp
<? 代码片段 ?>
```
或者XML格式的语句：
```jsp
<jsp:scriptlet>
代码片段
</jsp:scriptlet>
```

##### JSP声明:
```
<?! 代码片段 ?>
```
或者:
```
<jsp:declaration>
代码片段
</jsp:declaration>
```

##### JSP注释:
```
<%-- --%>
```

##### JSP指令标签：
语法格式：
```
<%@ directive attribute="value" %>
```

这里有三种指令标签：`<%@ page ... %>`, `<%@ include ... %>`, `<%@ taglib ... %>`
page指令的属性：
* buffer:
* autoFlush:
* contentType:
* errorPage:
* isErrorPage:
* extends:
* imports:
* info:
* isThreadSafe:
* language:
* session:
* isELIgnored:
* isScriptingEnabled:

##### JSP行为：
JSP行为标签使用XML语法结构来控制servlet引擎。能够动态插入一个文件，重用JavaBean组件，
```
<jsp:action_name attribute="value" />
```

行为标签：
* jsp:include
* jsp:useBean
* jsp:setProperty
* jsp:getProperty
* jsp:forward:属性:`page`
* jsp:plugin
* jsp:element
* jsp:attribute
* jsp:body
* jsp:text

##### JSP隐含对象：
* request: request对象是javax.servlet.http.HttpServletRequest的实例。每当客户端请求jsp页面的时候，jsp引擎就会制造一个新的request对象来代表这个请求。

* response: response对象是javax.servlet.http.HttpServletRequest的实例。每当客户端请求JSP页面的时候，jsp引擎创建response对象。

* out: out对象是javax.servlet.jsp.jspWriter实例。用来在response对象中写入内容。

* session: 和javax.servlet.http.httpSession类的实例。和Java Servlets中的session对象有一样的行为。

* application: application中包含了servlet中的ServletContext的实例。

* config: config对象是javax.servlet.ServletConfig类的实例。

* pageContext: 用来代表整个JSP页面。

* page:对页面实例的应用。

* Exception:异常信息。

##### JSP标准标签库：
1. 核心标签：
    <c:out>:
    <c:set>:
    <c:remove>:
    <c:catch>:
    <c:if>:
    <c:choose>:
    <c:when>:
    <c:otherwise>:
    <c:import>:
    <c:forEach>:
    <c:forTokens>:
    <c:param>:
    <c:redirect>:
    <c:url>:

2. 格式化标签：
    <fmt:formatNumber>:
    <fmt:parseNumber>:
    <fmt:formatDate>:
    <fmt:parseDate>:
    <fmt:bundle>:
    <fmt:setBundle>:
    <fmt:timeZone>:
    <fmt:setTimeZone>:
    <fmt:message>:
    <fmt:requestEncoding>:

3. SQL标签：
    <sql:setDataSource>:
    <sql:query>:
    <sql:update>:
    <sql:param>:
    <sql:dateParam>:
    <sql:transaction>:

4. XML标签：
    <x:out>:
    <x:parse>:
    <x:set>:
    <x:if>:
    <x:forEach>:
    <x:choose>:
    <x:when>:
    <x:otherwise>:
    <x:transform>:
    <x:param>:

5. JSTL函数：
    fn:contains();
    fn:containsIgnoreCase();
    fn:endsWith();
    fn:escapeXml();
    fn:indexOf();
    fn:join();
    fn:length();
    fn:replace();
    fn:split();
    fn:startsWith();
    fn:substring();
    fn:substringAfter();
    fn:substringBefore();
    fn:toLowCase();
    fn:toUpperCase();
    fn:trim();

    